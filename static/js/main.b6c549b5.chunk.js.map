{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","api/index.js","Components/Charts/Chart.jsx","Components/StatePicker/StatePicker.jsx","App.js","index.js","App.module.css","Components/Charts/Chart.module.css","images/covid19.svg","images/indian-flag.svg"],"names":["module","exports","Cards","data","active","confirmed","recovered","deaths","aChanges","cChanges","dChanges","rChanges","className","styles","container","Grid","spacing","justify","wrap","md","item","component","Card","xs","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","deceased","CircularProgress","fetchData","a","axios","get","console","log","fetchDailyData","cases_time_series","modifiedData","map","dailyData","dailyconfirmed","dailydeceased","recovored","dailyrecovered","date","fetchByState","State","statewise","modifieddata","filter","state","deltaconfirmed","deltadeaths","deltarecovered","statecode","Chart","useState","setDailyData","useEffect","fetchAPI","xlabel","substring","lineChart","length","labels","datasets","label","fill","backgroundColor","borderColor","barChart","borderWidth","options","legend","display","title","text","StatePicker","handleStateChange","setState","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","value","key","App","fetchedData","this","imageContainer","image","src","Coronalogo","alt","IndianFlag","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6c549b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__22GDt\",\"card\":\"Cards_card__3AP4y\",\"active\":\"Cards_active__1Babf\",\"confirmed\":\"Cards_confirmed__2bvHn\",\"recovered\":\"Cards_recovered__3t90n\",\"deceased\":\"Cards_deceased__23ykj\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid, CircularProgress } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nfunction Cards({data:{active, confirmed, recovered, deaths, aChanges, cChanges, dChanges, rChanges }}) {\r\n    if(!active){\r\n      return <CircularProgress />\r\n    }\r\n    return (\r\n     <div className  ={styles.container }>\r\n       <Grid container spacing = {3} justify ='space-evenly' wrap = 'nowrap' md = 'auto'>\r\n         <Grid item component = {Card} xs = {12} md ={3} className = {cx(styles.card,styles.active)}>\r\n           <CardContent>\r\n             <Typography color = \"textSecondary\" gutterBottom>Active</Typography>\r\n             <Typography variant = \"h5\">\r\n               <CountUp start = {0} end = {active} duration = {2.5} separator = \",\" />\r\n               </Typography>\r\n             <Typography  gutterBottom>{aChanges>0 && \"+\" }{aChanges}</Typography> \r\n            \r\n           </CardContent>\r\n         </Grid>\r\n         <Grid item component = {Card} xs = {12} md ={3} className = {cx(styles.card,styles.confirmed)}>\r\n           <CardContent>\r\n             <Typography color = \"textSecondary\" gutterBottom>Confirmed</Typography>\r\n             <Typography variant = \"h5\"> \r\n             <CountUp start = {0} end = {confirmed} duration = {2.5} separator = \",\" />\r\n             </Typography>\r\n             <Typography  gutterBottom>{cChanges>0 && \"+\" }{cChanges}</Typography>\r\n           </CardContent>\r\n         </Grid>\r\n         <Grid item component = {Card} xs = {12} md ={3} className = {cx(styles.card,styles.recovered)}>\r\n           <CardContent>\r\n             <Typography color = \"textSecondary\" gutterBottom>Recovories</Typography>\r\n             <Typography variant = \"h5\"> \r\n             <CountUp start = {0} end = {recovered} duration = {2.5} separator = \",\" />\r\n             </Typography>\r\n             <Typography  gutterBottom>{rChanges>0 && \"+\" }{rChanges}</Typography>\r\n           </CardContent>\r\n         </Grid>\r\n         <Grid item component = {Card} xs = {12} md ={3} className = {cx(styles.card,styles.deceased)}>\r\n           <CardContent>\r\n             <Typography color = \"textSecondary\" gutterBottom>Deaths</Typography>\r\n             <Typography variant = \"h5\"> \r\n             <CountUp start = {0} end = {deaths} duration = {2.5} separator = \",\" />\r\n             </Typography>\r\n             <Typography  gutterBottom>{dChanges>0 && \"+\" }{dChanges}</Typography>\r\n           </CardContent>\r\n         </Grid>\r\n       </Grid>\r\n\r\n     </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\n\r\nconst url  = \"https://api.covidindiatracker.com/\"\r\n\r\n export const fetchData = async () => {\r\n    try{\r\n       \r\n       const {data:{active, confirmed, recovered, deaths,\r\n         aChanges ,cChanges , dChanges, rChanges}} = await axios.get(`${url}total.json`);\r\n\r\n    return {active,confirmed,recovered,deaths, aChanges, cChanges, dChanges, rChanges}; \r\n       \r\n\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n        const {data:{cases_time_series}} =  await axios.get(`https://api.covid19india.org/data.json`);\r\n        const modifiedData = cases_time_series.map((dailyData)=>({\r\n        confirmed:dailyData.dailyconfirmed,\r\n        deaths:dailyData.dailydeceased,\r\n        recovored:dailyData.dailyrecovered,\r\n       date: dailyData.date\r\n      }))\r\n\r\n      return modifiedData;\r\n\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchByState = async (State) => {\r\n\r\n  \r\n    try{\r\n       const {data:{statewise}} = await axios.get(`https://api.covid19india.org/data.json`);\r\n\r\n     if(State){\r\n         if(State==\"Total\"){\r\n           return await fetchData();\r\n            \r\n         }\r\n        console.log(\"inside fetchByStateApi\",State)\r\n         const modifieddata = statewise.filter((state)=>{return state.state===State})\r\n         \r\n       const   {active, confirmed, recovered, deaths,\r\n         deltaconfirmed: cChanges,deltadeaths: dChanges,deltarecovered: rChanges} = modifieddata[0];\r\n\r\n\r\n         \r\n         return {active, confirmed, recovered, deaths, cChanges, dChanges, rChanges};\r\n     }\r\n       return statewise.map((State)=>({\r\n           State:State.state,\r\n           statecode:State.statecode,\r\n       }));\r\n\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\n//temp fun\r\n// export const fetchStateStatus = async (statecode) => {\r\n//    try{\r\n//     //    const {data:{[statecode]:status}} = await axios.get('https://api.covid19india.org/v4/data.json')\r\n//     const response = await axios.get('https://api.covid19india.org/v4/data.json')\r\n\r\n     \r\n//      console.log(response.data  )\r\n      \r\n//     //  return {active,confirmed,recovered,deaths, aChanges, cChanges, dChanges, rChanges}; \r\n\r\n//    }\r\n//    catch(error){\r\n//        console.log(error);\r\n\r\n//    }\r\n// }\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\n// import {Line, Bar} from 'react-chartjs-2';\r\nimport { Line,Bar } from '@reactchartjs/react-chart.js'\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nfunction Chart({data:{confirmed,active,recovered,deaths},State}) {\r\n    const [dailyData, setDailyData] = useState([])\r\n    \r\n    useEffect(()=>{\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n       \r\n        fetchAPI();\r\n       \r\n    },[]);\r\n\r\n    \r\n    // const lineChart = (\r\n    //     dailyData.length\r\n    //     ?\r\n    //     (<Line \r\n    //     data = {{\r\n    //         labels:dailyData.map(({date})=>date),\r\n    //         datasets: [{\r\n    //              data:dailyData.map(({confirmed})=>confirmed),\r\n    //              label:'confirmed',\r\n    //              borderColor:'#333fff',\r\n    //              fill:true,\r\n    //         },{\r\n    //             data:dailyData.map(({recovored})=>recovored),\r\n    //              label:'recovored',\r\n    //              borderColor:'green',\r\n    //              fill:true,\r\n    //         },{\r\n    //             data:dailyData.map(({deaths})=>deaths),\r\n    //              label:'deceased',\r\n    //              borderColor:'red',\r\n    //              backgroundColor:'rgba(255,0,0,0.5)',\r\n    //              fill:true,\r\n    //         }],\r\n\r\n    //     }}\r\n    //     />):null\r\n\r\n    // );\r\n\r\n  \r\n  \r\n    const xlabel = dailyData.map(({date})=> date.substring(0,6));\r\n    const lineChart = (\r\n        \r\n            dailyData.length\r\n            ?\r\n            (<Line \r\n            data = {{\r\n                // lables:dailyData.map(({date})=> date.substring(0,3)),\r\n                labels: xlabel,\r\n                datasets :[{\r\n                    label:'confirmed',\r\n                    data:dailyData.map(({confirmed})=>confirmed),\r\n                    fill:true,\r\n                    backgroundColor: 'rgba(54, 162, 235,0.1)',\r\n                    borderColor: 'rgb(54, 162, 235)',\r\n                }, {\r\n                    label:'recovered',\r\n                    data:dailyData.map(({recovored})=>recovored),\r\n                    fill:true,\r\n                    backgroundColor: 'rgba(0, 255, 0,0.1)',\r\n                    borderColor: 'rgba(0, 255, 0)',\r\n                }, {\r\n                    label:'deaths',\r\n                    data:dailyData.map(({deaths})=>deaths),\r\n                    fill:true,\r\n                    backgroundColor: 'rgba(255, 99, 132,0.2)',\r\n                    borderColor: 'rgb(255, 99, 132)',\r\n                }]\r\n            }}\r\n            />):null\r\n    )\r\n\r\n\r\n    const barChart   = (\r\n        confirmed \r\n        ?(<Bar \r\n            data = \r\n            {{\r\n         labels: ['active','confirmend','recovored','deaths'],\r\n         datasets :[{\r\n         data:[active,confirmed,recovered,deaths],\r\n         backgroundColor: [\r\n            'rgba(255, 99, 132, 0.2)',\r\n            'rgba(54, 162, 235, 0.2)',\r\n            'rgba(255, 206, 86, 0.2)',\r\n            'rgba(75, 192, 192, 0.2)',  \r\n         ],\r\n         borderColor: [\r\n            'rgba(255, 99, 132, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(255, 206, 86, 1)',\r\n            'rgba(75, 192, 192, 1)',\r\n         ],\r\n         borderWidth:1,\r\n        }\r\n    ]\r\n}}\r\noptions = {{\r\n    legend:{display:false},\r\n    title:{display:true, text: `Current Status of ${State}`}\r\n}}\r\n\r\n\r\n/>): null \r\n    )\r\n\r\n\r\n\r\n    \r\n    return (\r\n        <div className ={styles.container}>\r\n            {State&&State!=\"Total\"?barChart:lineChart}  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React, {useEffect,useState} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport {fetchByState} from '../../api';\r\n\r\nimport styles from './StatePicker.module.css';\r\n\r\n\r\n\r\nfunction StatePicker({handleStateChange}) {\r\n   const [State,setState] = useState([]);\r\n  \r\n   useEffect(()=>{\r\n      const fetchAPI = async () => {\r\n        setState(await fetchByState());\r\n      } \r\n      fetchAPI();\r\n   },[setState])\r\n  \r\n//  State.map((state)=>{\r\n//      console.log(state.state);\r\n//      console.log(state.statecode);\r\n\r\n//  })\r\n    return (\r\n        <FormControl className = {styles.formControl}>\r\n            <NativeSelect defaultValue =\"\"  onChange = {(e) => handleStateChange(e.target.value)}>\r\n                { State.map((State)=> <option key ={State.statecode} value = {State.State}>{State.State}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default StatePicker;","import React, { Component } from 'react';\r\nimport {Cards,Chart,StatePicker} from './Components';\r\nimport {fetchByState, fetchData} from './api'\r\n\r\nimport Coronalogo from './images/covid19.svg'\r\nimport IndianFlag from './images/indian-flag.svg'\r\n\r\n\r\n\r\n\r\nimport styles from './App.module.css'\r\n\r\nclass App extends Component {\r\n    state = {\r\n         data:{},\r\n         State:\"\",\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({\r\n            data:fetchedData\r\n        }) \r\n    }\r\n\r\n   handleStateChange = async (State) => {\r\n    \r\n        // const data =  await fetchStateStatus(statecode);\r\n      \r\n       \r\n        const data = await fetchByState(State)\r\n        this.setState({\r\n            data,\r\n            State,\r\n        })\r\n      \r\n      \r\n\r\n  }\r\n\r\n\r\n    render() {\r\n        const {data,State} = this.state;\r\n        return (\r\n            <div className = {styles.container} >\r\n                <div className = {styles.imageContainer}>\r\n                <img className ={styles.image} src = {Coronalogo} alt=\"CoronaLogo\" />\r\n                <img className ={styles.image} src = {IndianFlag} alt=\"IndianFlag\" />\r\n                </div>\r\n               <Cards data = {data} />  \r\n                <StatePicker handleStateChange = {this.handleStateChange} />\r\n               <Chart data = {data} State = {State} /> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2DD8z\",\"imageContainer\":\"App_imageContainer__U-yYB\",\"image\":\"App_image__30D_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3lTVA\"};","module.exports = __webpack_public_path__ + \"static/media/covid19.01cc6a34.svg\";","module.exports = __webpack_public_path__ + \"static/media/indian-flag.f3a60ba3.svg\";"],"sourceRoot":""}