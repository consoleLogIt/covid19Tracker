{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","api/index.js","Components/Charts/Chart.jsx","Components/StatePicker/StatePicker.jsx","Components/IndiaTextLogo/IndiaTextLogo.jsx","App.js","index.js","App.module.css","Components/Charts/Chart.module.css","Components/IndiaTextLogo/IndiaTextLogo.module.css","images/covid19.svg"],"names":["module","exports","Cards","props","data","console","log","message","active","confirmed","recovered","deaths","aChanges","cChanges","dChanges","rChanges","style","fontWeight","className","styles","container","Grid","gridwrap","spacing","justify","md","item","component","Card","xs","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","deceased","CircularProgress","fetchData","a","axios","get","url","fetchDailyData","cases_time_series","modifiedData","map","dailyData","dailyconfirmed","dailydeceased","recovored","dailyrecovered","date","fetchByState","State","statewise","modifieddata","filter","state","deltaconfirmed","deltadeaths","deltarecovered","statecode","Chart","useState","setDailyData","useEffect","fetchAPI","xlabel","substring","lineChart","length","labels","datasets","label","fill","backgroundColor","borderColor","barChart","borderWidth","options","legend","display","title","text","StatePicker","handleStateChange","setState","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","value","key","IndiaTextLogo","fontStyle","App","fetchedData","this","image","rotate","src","Coronalogo","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bf60bce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__22GDt\",\"card\":\"Cards_card__3AP4y\",\"active\":\"Cards_active__1Babf\",\"confirmed\":\"Cards_confirmed__2bvHn\",\"recovered\":\"Cards_recovered__3t90n\",\"deceased\":\"Cards_deceased__23ykj\",\"gridwrap\":\"Cards_gridwrap__yjLrb\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid, CircularProgress } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nfunction Cards(props) {\r\n  const {data} = props;\r\n  console.log(props)\r\n  const {message} = data;\r\n  const { active, confirmed, recovered, deaths, aChanges, cChanges, dChanges, rChanges } = data;\r\n  if(message){\r\n    return <h1 style = {{fontWeight:\"normal\"}}>{message}</h1>\r\n  }\r\n  if (!active) {\r\n    return <CircularProgress />\r\n  }\r\n  \r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid className = {styles.gridwrap} container spacing={3} justify='space-evenly'  md='auto'>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.active)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Active</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={active} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography gutterBottom>{aChanges > 0 && \"+\"}\r\n            <CountUp start={0} end={aChanges} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.confirmed)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Confirmed</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={confirmed} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography gutterBottom>{cChanges > 0 && \"+\"}\r\n            <CountUp start={0} end={cChanges} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={recovered} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography gutterBottom>{rChanges > 0 && \"+\"}\r\n            <CountUp start={0} end={rChanges} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deceased)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={deaths} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography gutterBottom>{dChanges > 0 && \"+\"}\r\n            <CountUp start={0} end={dChanges} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\n\r\n// fetch data for loading page\r\nexport const fetchData = async () => {\r\n  try {\r\n\r\n    const { data: { active, confirmed, recovered, deaths,aChanges, cChanges, dChanges, rChanges } } \r\n    = await axios.get(`https://api.covidindiatracker.com/total.json`);\r\n\r\n    return { active, confirmed, recovered, deaths, aChanges, cChanges, dChanges, rChanges };\r\n\r\n  }\r\n  catch (error) {\r\n    console.log(error);\r\n    return {message:\"Total endpoint is down right now but you check by states\"}\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// fetch data for line chart\r\nconst url = `https://api.covid19india.org/data.json`;\r\n\r\n\r\n\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n\r\n    const { data: { cases_time_series } } = await axios.get(url);\r\n\r\n    const modifiedData = cases_time_series.map((dailyData) => ({\r\n      confirmed: dailyData.dailyconfirmed,\r\n      deaths: dailyData.dailydeceased,\r\n      recovored: dailyData.dailyrecovered,\r\n      date: dailyData.date\r\n    }))\r\n\r\n    return modifiedData;\r\n\r\n  }\r\n  catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n//fetch data to populate the State list if State arguments is undefined\r\n//fetch data for particular state if State is passed as argument\r\nexport const fetchByState = async (State) => {\r\n\r\n  try {\r\n    const { data: { statewise } } = await axios.get(url);\r\n\r\n    // if State is \"Total\" (using different api url for total(India) data)\r\n    if (State) {\r\n      if (State === \"Total\") {\r\n        return await fetchData();\r\n      }\r\n      //filter out the data for the particular state\r\n      const modifieddata = statewise.filter((state) => { return state.state === State })\r\n\r\n      const { active, confirmed, recovered, deaths,deltaconfirmed: cChanges, deltadeaths: dChanges, deltarecovered: rChanges } = modifieddata[0];\r\n\r\n      return { active, confirmed, recovered, deaths, cChanges, dChanges, rChanges };\r\n    }\r\n\r\n    return statewise.map((State) => ({\r\n      State: State.state,\r\n      statecode: State.statecode,\r\n    }));\r\n\r\n  }\r\n  catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from '@reactchartjs/react-chart.js'\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nfunction Chart(props) {\r\n\r\n    const {data,State} = props;\r\n    const {confirmed, active, recovered, deaths } = data;\r\n    const [dailyData, setDailyData] = useState([])\r\n    console.log(data,\"data\")\r\n    console.log(State,\"data\");\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n\r\n    }, []);\r\n\r\n\r\n    const xlabel = dailyData.map(({ date }) => date.substring(0, 6));\r\n    const lineChart = (\r\n        dailyData.length\r\n            ?\r\n            (<Line\r\n                data={{\r\n                    labels: xlabel,\r\n                    datasets: [{\r\n                        label: 'confirmed',\r\n                        data: dailyData.map(({ confirmed }) => confirmed),\r\n                        fill: true,\r\n                        backgroundColor: 'rgba(54, 162, 235,0.1)',\r\n                        borderColor: 'rgb(54, 162, 235)',\r\n                    }, {\r\n                        label: 'recovered',\r\n                        data: dailyData.map(({ recovored }) => recovored),\r\n                        fill: true,\r\n                        backgroundColor: 'rgba(0, 255, 0,0.1)',\r\n                        borderColor: 'rgba(0, 255, 0)',\r\n                    }, {\r\n                        label: 'deaths',\r\n                        data: dailyData.map(({ deaths }) => deaths),\r\n                        fill: true,\r\n                        backgroundColor: 'rgba(255, 99, 132,0.2)',\r\n                        borderColor: 'rgb(255, 99, 132)',\r\n                    }]\r\n                }}\r\n            />) : null\r\n    )\r\n\r\n\r\n    const barChart = (\r\n        confirmed\r\n            ? (<Bar\r\n                data=\r\n                {{\r\n                    labels: ['active', 'confirmend', 'recovored', 'deaths'],\r\n                    datasets: [{\r\n                        data: [active, confirmed, recovered, deaths],\r\n                        backgroundColor: [\r\n                            'rgba(255, 206, 86, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(10, 210, 10, 0.2)',\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 206, 10, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(50, 192, 45, 1)',\r\n                            'rgba(255, 99, 132, 1)',\r\n                        ],\r\n                        borderWidth: 1,\r\n                    }\r\n                    ]\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current Status of ${State}` }\r\n                }}\r\n\r\n\r\n            />) : null\r\n    )\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {State ? barChart : lineChart}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React, { useEffect, useState } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchByState } from '../../api';\r\n\r\nimport styles from './StatePicker.module.css';\r\n\r\n\r\n\r\nfunction StatePicker({ handleStateChange }) {\r\n    const [State, setState] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setState(await fetchByState());\r\n        }\r\n        fetchAPI();\r\n    }, [setState])\r\n\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleStateChange(e.target.value)}>\r\n                {State.map((State) => <option key={State.statecode} value={State.State}>{State.State}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default StatePicker;","import React from 'react';\r\nimport styles from './IndiaTextLogo.module.css';\r\n\r\nfunction IndiaTextLogo(props) {\r\n    return (\r\n        <div className={styles.fontStyle}>\r\n            <h1>{props.text ? props.text : \"INDIA\"}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IndiaTextLogo;","import React, { Component } from 'react';\r\nimport { Cards, Chart, StatePicker } from './Components';\r\nimport { fetchByState, fetchData } from './api'\r\nimport IndiaTextLogo from './Components/IndiaTextLogo/IndiaTextLogo';\r\nimport cx from 'classnames';\r\n\r\n\r\nimport Coronalogo from './images/covid19.svg'\r\n\r\nimport styles from './App.module.css'\r\n\r\nclass App extends Component {\r\n    state = {\r\n        data: {},\r\n        State: \"\",\r\n    }\r\n\r\n async componentDidMount() {\r\n         const fetchedData = await fetchData();\r\n         this.setState({\r\n            data: fetchedData\r\n         })\r\n    }\r\n\r\n handleStateChange = async (State) => {\r\n\r\n        const data = await fetchByState(State)\r\n        console.log(data);\r\n        this.setState({\r\n            data,\r\n            State: (State === \"Total\" ? null : State),\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { data, State } = this.state;\r\n        return (\r\n            <div className={styles.container} >\r\n                <img className={cx(styles.image, styles.rotate)} src={Coronalogo} alt=\"CoronaLogo\" />\r\n                <IndiaTextLogo text={State} />\r\n                <Cards data={data} />\r\n                <StatePicker handleStateChange={this.handleStateChange} />\r\n                <Chart data={data} State={State} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2DD8z\",\"imageContainer\":\"App_imageContainer__U-yYB\",\"image\":\"App_image__30D_a\",\"rotate\":\"App_rotate__2kfP2\",\"rotation\":\"App_rotation__1o7dd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3lTVA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontStyle\":\"IndiaTextLogo_fontStyle__2zNPQ\"};","module.exports = __webpack_public_path__ + \"static/media/covid19.01cc6a34.svg\";"],"sourceRoot":""}