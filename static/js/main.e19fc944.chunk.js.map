{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","api/index.js","Components/Charts/Chart.jsx","Components/StatePicker/StatePicker.jsx","Components/IndiaTextLogo/IndiaTextLogo.jsx","App.js","index.js","App.module.css","Components/Charts/Chart.module.css","Components/IndiaTextLogo/IndiaTextLogo.module.css","images/covid19.svg"],"names":["module","exports","Cards","data","active","confirmed","recovered","deaths","aChanges","cChanges","dChanges","rChanges","className","styles","container","Grid","gridwrap","spacing","justify","md","item","component","Card","xs","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","deceased","CircularProgress","fetchData","a","axios","get","console","log","fetchDailyData","cases_time_series","modifiedData","map","dailyData","dailyconfirmed","dailydeceased","recovored","dailyrecovered","date","fetchByState","State","statewise","modifieddata","filter","state","deltaconfirmed","deltadeaths","deltarecovered","statecode","Chart","useState","setDailyData","useEffect","fetchAPI","xlabel","substring","lineChart","length","labels","datasets","label","fill","backgroundColor","borderColor","barChart","borderWidth","options","legend","display","title","text","StatePicker","handleStateChange","setState","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","value","key","IndiaTextLogo","props","fontStyle","App","fetchedData","this","image","rotate","src","Coronalogo","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e19fc944.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__22GDt\",\"card\":\"Cards_card__3AP4y\",\"active\":\"Cards_active__1Babf\",\"confirmed\":\"Cards_confirmed__2bvHn\",\"recovered\":\"Cards_recovered__3t90n\",\"deceased\":\"Cards_deceased__23ykj\",\"gridwrap\":\"Cards_gridwrap__yjLrb\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid, CircularProgress } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nfunction Cards({ data: { active, confirmed, recovered, deaths, aChanges, cChanges, dChanges, rChanges } }) {\r\n  if (!active) {\r\n    return <CircularProgress />\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid className = {styles.gridwrap} container spacing={3} justify='space-evenly'  md='auto'>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.active)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Active</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={active} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography gutterBottom>{aChanges > 0 && \"+\"}\r\n            <CountUp start={0} end={aChanges} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.confirmed)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Confirmed</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={confirmed} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography gutterBottom>{cChanges > 0 && \"+\"}\r\n            <CountUp start={0} end={cChanges} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={recovered} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography gutterBottom>{rChanges > 0 && \"+\"}\r\n            <CountUp start={0} end={rChanges} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deceased)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={deaths} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography gutterBottom>{dChanges > 0 && \"+\"}\r\n            <CountUp start={0} end={dChanges} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\n\r\nconst url  = \"https://api.covidindiatracker.com/\"\r\n\r\n export const fetchData = async () => {\r\n    try{\r\n       \r\n       const {data:{active, confirmed, recovered, deaths,\r\n         aChanges ,cChanges , dChanges, rChanges}} = await axios.get(`${url}total.json`);\r\n\r\n    return {active,confirmed,recovered,deaths, aChanges, cChanges, dChanges, rChanges}; \r\n       \r\n\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n        const {data:{cases_time_series}} =  await axios.get(`https://api.covid19india.org/data.json`);\r\n        const modifiedData = cases_time_series.map((dailyData)=>({\r\n        confirmed:dailyData.dailyconfirmed,\r\n        deaths:dailyData.dailydeceased,\r\n        recovored:dailyData.dailyrecovered,\r\n       date: dailyData.date\r\n      }))\r\n\r\n      return modifiedData;\r\n\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchByState = async (State) => {\r\n\r\n  \r\n    try{\r\n       const {data:{statewise}} = await axios.get(`https://api.covid19india.org/data.json`);\r\n\r\n     if(State){\r\n         if(State==\"Total\"){\r\n           return await fetchData();\r\n            \r\n         }\r\n        console.log(\"inside fetchByStateApi\",State)\r\n         const modifieddata = statewise.filter((state)=>{return state.state===State})\r\n         \r\n       const   {active, confirmed, recovered, deaths,\r\n         deltaconfirmed: cChanges,deltadeaths: dChanges,deltarecovered: rChanges} = modifieddata[0];\r\n\r\n\r\n         \r\n         return {active, confirmed, recovered, deaths, cChanges, dChanges, rChanges};\r\n     }\r\n       return statewise.map((State)=>({\r\n           State:State.state,\r\n           statecode:State.statecode,\r\n       }));\r\n\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\n//temp fun\r\n// export const fetchStateStatus = async (statecode) => {\r\n//    try{\r\n//     //    const {data:{[statecode]:status}} = await axios.get('https://api.covid19india.org/v4/data.json')\r\n//     const response = await axios.get('https://api.covid19india.org/v4/data.json')\r\n\r\n     \r\n//      console.log(response.data  )\r\n      \r\n//     //  return {active,confirmed,recovered,deaths, aChanges, cChanges, dChanges, rChanges}; \r\n\r\n//    }\r\n//    catch(error){\r\n//        console.log(error);\r\n\r\n//    }\r\n// }\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\n// import {Line, Bar} from 'react-chartjs-2';\r\nimport { Line, Bar } from '@reactchartjs/react-chart.js'\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nfunction Chart({ data: { confirmed, active, recovered, deaths }, State }) {\r\n    const [dailyData, setDailyData] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n\r\n    }, []);\r\n\r\n\r\n    // const lineChart = (\r\n    //     dailyData.length\r\n    //     ?\r\n    //     (<Line \r\n    //     data = {{\r\n    //         labels:dailyData.map(({date})=>date),\r\n    //         datasets: [{\r\n    //              data:dailyData.map(({confirmed})=>confirmed),\r\n    //              label:'confirmed',\r\n    //              borderColor:'#333fff',\r\n    //              fill:true,\r\n    //         },{\r\n    //             data:dailyData.map(({recovored})=>recovored),\r\n    //              label:'recovored',\r\n    //              borderColor:'green',\r\n    //              fill:true,\r\n    //         },{\r\n    //             data:dailyData.map(({deaths})=>deaths),\r\n    //              label:'deceased',\r\n    //              borderColor:'red',\r\n    //              backgroundColor:'rgba(255,0,0,0.5)',\r\n    //              fill:true,\r\n    //         }],\r\n\r\n    //     }}\r\n    //     />):null\r\n\r\n    // );\r\n\r\n\r\n\r\n    const xlabel = dailyData.map(({ date }) => date.substring(0, 6));\r\n    const lineChart = (\r\n\r\n        dailyData.length\r\n            ?\r\n            (<Line\r\n                data={{\r\n                    // lables:dailyData.map(({date})=> date.substring(0,3)),\r\n                    labels: xlabel,\r\n                    datasets: [{\r\n                        label: 'confirmed',\r\n                        data: dailyData.map(({ confirmed }) => confirmed),\r\n                        fill: true,\r\n                        backgroundColor: 'rgba(54, 162, 235,0.1)',\r\n                        borderColor: 'rgb(54, 162, 235)',\r\n                    }, {\r\n                        label: 'recovered',\r\n                        data: dailyData.map(({ recovored }) => recovored),\r\n                        fill: true,\r\n                        backgroundColor: 'rgba(0, 255, 0,0.1)',\r\n                        borderColor: 'rgba(0, 255, 0)',\r\n                    }, {\r\n                        label: 'deaths',\r\n                        data: dailyData.map(({ deaths }) => deaths),\r\n                        fill: true,\r\n                        backgroundColor: 'rgba(255, 99, 132,0.2)',\r\n                        borderColor: 'rgb(255, 99, 132)',\r\n                    }]\r\n                }}\r\n            />) : null\r\n    )\r\n\r\n\r\n    const barChart = (\r\n        confirmed\r\n            ? (<Bar\r\n                data=\r\n                {{\r\n                    labels: ['active', 'confirmend', 'recovored', 'deaths'],\r\n                    datasets: [{\r\n                        data: [active, confirmed, recovered, deaths],\r\n                        backgroundColor: [\r\n                            'rgba(255, 206, 86, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(10, 210, 10, 0.2)',\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 206, 10, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(50, 192, 45, 1)',\r\n                            'rgba(255, 99, 132, 1)',\r\n                        ],\r\n                        borderWidth: 1,\r\n                    }\r\n                    ]\r\n                }}\r\n                options={{\r\n                    legend: { display: false },\r\n                    title: { display: true, text: `Current Status of ${State}` }\r\n                }}\r\n\r\n\r\n            />) : null\r\n    )\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {State && State != \"Total\" ? barChart : lineChart}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React, { useEffect, useState } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport { fetchByState } from '../../api';\r\n\r\nimport styles from './StatePicker.module.css';\r\n\r\n\r\n\r\nfunction StatePicker({ handleStateChange }) {\r\n    const [State, setState] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setState(await fetchByState());\r\n        }\r\n        fetchAPI();\r\n    }, [setState])\r\n\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleStateChange(e.target.value)}>\r\n                {State.map((State) => <option key={State.statecode} value={State.State}>{State.State}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default StatePicker;","import React from 'react';\r\nimport styles from './IndiaTextLogo.module.css';\r\n\r\nfunction IndiaTextLogo(props) {\r\n    return (\r\n        <div className={styles.fontStyle}>\r\n            <h1>{props.text ? props.text : \"INDIA\"}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IndiaTextLogo;","import React, { Component } from 'react';\r\nimport { Cards, Chart, StatePicker } from './Components';\r\nimport { fetchByState, fetchData } from './api'\r\nimport IndiaTextLogo from './Components/IndiaTextLogo/IndiaTextLogo';\r\nimport cx from 'classnames';\r\n\r\n\r\nimport Coronalogo from './images/covid19.svg'\r\n\r\n\r\n\r\n\r\nimport styles from './App.module.css'\r\n\r\nclass App extends Component {\r\n    state = {\r\n        data: {},\r\n        State: \"\",\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({\r\n            data: fetchedData\r\n        })\r\n    }\r\n\r\n    handleStateChange = async (State) => {\r\n\r\n        const data = await fetchByState(State)\r\n        this.setState({\r\n            data,\r\n            State: (State == \"Total\" ? null : State),\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { data, State } = this.state;\r\n        return (\r\n            <div className={styles.container} >\r\n                    <img className={cx(styles.image, styles.rotate)} src={Coronalogo} alt=\"CoronaLogo\" />\r\n\r\n                <IndiaTextLogo text={State} />\r\n                <Cards data={data} />\r\n                <StatePicker handleStateChange={this.handleStateChange} />\r\n                <Chart data={data} State={State} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2DD8z\",\"imageContainer\":\"App_imageContainer__U-yYB\",\"image\":\"App_image__30D_a\",\"rotate\":\"App_rotate__2kfP2\",\"rotation\":\"App_rotation__1o7dd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3lTVA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontStyle\":\"IndiaTextLogo_fontStyle__2zNPQ\"};","module.exports = __webpack_public_path__ + \"static/media/covid19.01cc6a34.svg\";"],"sourceRoot":""}